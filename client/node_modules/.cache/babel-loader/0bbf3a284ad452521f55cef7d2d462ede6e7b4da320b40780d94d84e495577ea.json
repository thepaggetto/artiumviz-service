{"ast":null,"code":"var _jsxFileName = \"/Users/thepaggetto/artiumviz-service/client/src/App.js\",\n  _s = $RefreshSig$();\n// client/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport AdminPanel from './components/AdminPanel';\nimport OutputPage from './components/OutputPage';\nimport './App.css';\n\n// Configure API and WebSocket endpoints\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:3000';\nfunction App() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [settings, setSettings] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Initialize socket connection\n  useEffect(() => {\n    const newSocket = io(SOCKET_URL);\n    setSocket(newSocket);\n\n    // Clean up the socket on unmount\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n\n  // Fetch initial settings\n  useEffect(() => {\n    const fetchSettings = async () => {\n      try {\n        const response = await fetch(`${API_URL}/settings`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch settings');\n        }\n        const data = await response.json();\n        setSettings(data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching settings:', err);\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchSettings();\n  }, []);\n\n  // Set up socket event listeners\n  useEffect(() => {\n    if (!socket) return;\n    socket.on('settings-update', updatedSettings => {\n      setSettings(updatedSettings);\n    });\n    return () => {\n      socket.off('settings-update');\n    };\n  }, [socket]);\n\n  // Save settings function that can be passed to child components\n  const saveSettings = async newSettings => {\n    try {\n      const response = await fetch(`${API_URL}/settings`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newSettings)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save settings');\n      }\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error('Error saving settings:', err);\n      throw err;\n    }\n  };\n\n  // Upload logo function\n  const uploadLogo = async logoFile => {\n    const formData = new FormData();\n    formData.append('logo', logoFile);\n    try {\n      const response = await fetch(`${API_URL}/upload-logo`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to upload logo');\n      }\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error('Error uploading logo:', err);\n      throw err;\n    }\n  };\n\n  // Reset settings function\n  const resetSettings = async () => {\n    try {\n      const response = await fetch(`${API_URL}/reset-settings`, {\n        method: 'POST'\n      });\n      if (!response.ok) {\n        throw new Error('Failed to reset settings');\n      }\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error('Error resetting settings:', err);\n      throw err;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(AdminPanel, {\n          settings: settings,\n          saveSettings: saveSettings,\n          uploadLogo: uploadLogo,\n          resetSettings: resetSettings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/output\",\n        element: /*#__PURE__*/_jsxDEV(OutputPage, {\n          settings: settings,\n          socket: socket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P64deuSptW9vrFuAlqQqkMlR+FM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","io","AdminPanel","OutputPage","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","SOCKET_URL","REACT_APP_SOCKET_URL","App","_s","socket","setSocket","settings","setSettings","loading","setLoading","error","setError","newSocket","disconnect","fetchSettings","response","fetch","ok","Error","data","json","err","console","message","on","updatedSettings","off","saveSettings","newSettings","method","headers","body","JSON","stringify","uploadLogo","logoFile","formData","FormData","append","resetSettings","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","replace","_c","$RefreshReg$"],"sources":["/Users/thepaggetto/artiumviz-service/client/src/App.js"],"sourcesContent":["// client/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport AdminPanel from './components/AdminPanel';\nimport OutputPage from './components/OutputPage';\nimport './App.css';\n\n// Configure API and WebSocket endpoints\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\nconst SOCKET_URL = process.env.REACT_APP_SOCKET_URL || 'http://localhost:3000';\n\nfunction App() {\n  const [socket, setSocket] = useState(null);\n  const [settings, setSettings] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Initialize socket connection\n  useEffect(() => {\n    const newSocket = io(SOCKET_URL);\n    setSocket(newSocket);\n\n    // Clean up the socket on unmount\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n\n  // Fetch initial settings\n  useEffect(() => {\n    const fetchSettings = async () => {\n      try {\n        const response = await fetch(`${API_URL}/settings`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch settings');\n        }\n        const data = await response.json();\n        setSettings(data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching settings:', err);\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n\n    fetchSettings();\n  }, []);\n\n  // Set up socket event listeners\n  useEffect(() => {\n    if (!socket) return;\n\n    socket.on('settings-update', (updatedSettings) => {\n      setSettings(updatedSettings);\n    });\n\n    return () => {\n      socket.off('settings-update');\n    };\n  }, [socket]);\n\n  // Save settings function that can be passed to child components\n  const saveSettings = async (newSettings) => {\n    try {\n      const response = await fetch(`${API_URL}/settings`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(newSettings),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save settings');\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error('Error saving settings:', err);\n      throw err;\n    }\n  };\n\n  // Upload logo function\n  const uploadLogo = async (logoFile) => {\n    const formData = new FormData();\n    formData.append('logo', logoFile);\n\n    try {\n      const response = await fetch(`${API_URL}/upload-logo`, {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to upload logo');\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error('Error uploading logo:', err);\n      throw err;\n    }\n  };\n\n  // Reset settings function\n  const resetSettings = async () => {\n    try {\n      const response = await fetch(`${API_URL}/reset-settings`, {\n        method: 'POST',\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to reset settings');\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (err) {\n      console.error('Error resetting settings:', err);\n      throw err;\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">Error: {error}</div>;\n  }\n\n  return (\n    <Router>\n      <Routes>\n        <Route \n          path=\"/\" \n          element={\n            <AdminPanel \n              settings={settings} \n              saveSettings={saveSettings} \n              uploadLogo={uploadLogo}\n              resetSettings={resetSettings}\n            />\n          } \n        />\n        <Route \n          path=\"/output\" \n          element={\n            <OutputPage \n              settings={settings} \n              socket={socket}\n            />\n          } \n        />\n        {/* Aggiungi una route di fallback che reindirizza alla home */}\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAC5E,MAAMC,UAAU,GAAGH,OAAO,CAACC,GAAG,CAACG,oBAAoB,IAAI,uBAAuB;AAE9E,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAM2B,SAAS,GAAGrB,EAAE,CAACS,UAAU,CAAC;IAChCK,SAAS,CAACO,SAAS,CAAC;;IAEpB;IACA,OAAO,MAAM;MACXA,SAAS,CAACC,UAAU,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA5B,SAAS,CAAC,MAAM;IACd,MAAM6B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGpB,OAAO,WAAW,CAAC;QACnD,IAAI,CAACmB,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;QAC7C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCb,WAAW,CAACY,IAAI,CAAC;QACjBV,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZC,OAAO,CAACZ,KAAK,CAAC,0BAA0B,EAAEW,GAAG,CAAC;QAC9CV,QAAQ,CAACU,GAAG,CAACE,OAAO,CAAC;QACrBd,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDK,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA7B,SAAS,CAAC,MAAM;IACd,IAAI,CAACmB,MAAM,EAAE;IAEbA,MAAM,CAACoB,EAAE,CAAC,iBAAiB,EAAGC,eAAe,IAAK;MAChDlB,WAAW,CAACkB,eAAe,CAAC;IAC9B,CAAC,CAAC;IAEF,OAAO,MAAM;MACXrB,MAAM,CAACsB,GAAG,CAAC,iBAAiB,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,CAACtB,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAMuB,YAAY,GAAG,MAAOC,WAAW,IAAK;IAC1C,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGpB,OAAO,WAAW,EAAE;QAClDiC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,WAAW;MAClC,CAAC,CAAC;MAEF,IAAI,CAACb,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACZ,KAAK,CAAC,wBAAwB,EAAEW,GAAG,CAAC;MAC5C,MAAMA,GAAG;IACX;EACF,CAAC;;EAED;EACA,MAAMa,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACrC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,QAAQ,CAAC;IAEjC,IAAI;MACF,MAAMpB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGpB,OAAO,cAAc,EAAE;QACrDiC,MAAM,EAAE,MAAM;QACdE,IAAI,EAAEK;MACR,CAAC,CAAC;MAEF,IAAI,CAACrB,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACZ,KAAK,CAAC,uBAAuB,EAAEW,GAAG,CAAC;MAC3C,MAAMA,GAAG;IACX;EACF,CAAC;;EAED;EACA,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMxB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGpB,OAAO,iBAAiB,EAAE;QACxDiC,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACZ,KAAK,CAAC,2BAA2B,EAAEW,GAAG,CAAC;MAC/C,MAAMA,GAAG;IACX;EACF,CAAC;EAED,IAAIb,OAAO,EAAE;IACX,oBAAOb,OAAA;MAAK6C,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClD;EAEA,IAAInC,KAAK,EAAE;IACT,oBAAOf,OAAA;MAAK6C,SAAS,EAAC,OAAO;MAAAC,QAAA,GAAC,SAAO,EAAC/B,KAAK;IAAA;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACpD;EAEA,oBACElD,OAAA,CAACR,MAAM;IAAAsD,QAAA,eACL9C,OAAA,CAACP,MAAM;MAAAqD,QAAA,gBACL9C,OAAA,CAACN,KAAK;QACJyD,IAAI,EAAC,GAAG;QACRC,OAAO,eACLpD,OAAA,CAACH,UAAU;UACTc,QAAQ,EAAEA,QAAS;UACnBqB,YAAY,EAAEA,YAAa;UAC3BO,UAAU,EAAEA,UAAW;UACvBK,aAAa,EAAEA;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACFlD,OAAA,CAACN,KAAK;QACJyD,IAAI,EAAC,SAAS;QACdC,OAAO,eACLpD,OAAA,CAACF,UAAU;UACTa,QAAQ,EAAEA,QAAS;UACnBF,MAAM,EAAEA;QAAO;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAEFlD,OAAA,CAACN,KAAK;QAACyD,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEpD,OAAA,CAACL,QAAQ;UAAC0D,EAAE,EAAC,GAAG;UAACC,OAAO;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAAC1C,EAAA,CAxJQD,GAAG;AAAAgD,EAAA,GAAHhD,GAAG;AA0JZ,eAAeA,GAAG;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}